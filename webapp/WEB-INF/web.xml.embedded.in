<?xml version="1.0"?>

<!-- 
/**
 *  web.xml
 *
 * (C) Copyright IBM Corp. 2005
 *
 * THIS FILE IS PROVIDED UNDER THE TERMS OF THE COMMON PUBLIC LICENSE
 * ("AGREEMENT"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THIS FILE
 * CONSTITUTES RECIPIENTS ACCEPTANCE OF THE AGREEMENT.
 *
 * You can obtain a current copy of the Common Public License from
 * http://www.opensource.org/licenses/cpl1.0.php
 *
 * Author:     Michael Bauschert
 *
 * Contributors:
 *
 * TaskLauncher-Deployment Descriptor
 *
 */
 -->

<!DOCTYPE web-app PUBLIC
  "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
  "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>
<context-param>
        <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
        <param-value>server</param-value>
        <description>
            State saving method: "client" or "server" (= default)
            See JSF Specification 2.5.2
        </description>
    </context-param>
    <context-param>
        <param-name>org.apache.myfaces.ALLOW_JAVASCRIPT</param-name>
        <param-value>true</param-value>
        <description>
            This parameter tells MyFaces if javascript code should be allowed in the
            rendered HTML output.
            If javascript is allowed, command_link anchors will have javascript code
            that submits the corresponding form.
            If javascript is not allowed, the state saving info and nested parameters
            will be added as url parameters.
            Default: "true"
        </description>
    </context-param>
    <context-param>
        <param-name>org.apache.myfaces.DETECT_JAVASCRIPT</param-name>
        <param-value>false</param-value>
        <description>
            This parameter tells MyFaces if javascript code should be allowed in the
            rendered HTML output.
            If javascript is allowed, command_link anchors will have javascript code
            that submits the corresponding form.
            If javascript is not allowed, the state saving info and nested parameters
            will be added as url parameters.
            Default: "false"

            Setting this param to true should be combined with STATE_SAVING_METHOD "server" for
            best results.

            This is an EXPERIMENTAL feature. You also have to enable the detector filter/filter mapping below to get
            JavaScript detection working.
        </description>
    </context-param>
    <context-param>
        <param-name>org.apache.myfaces.PRETTY_HTML</param-name>
        <param-value>true</param-value>
        <description>
            If true, rendered HTML code will be formatted, so that it is "human readable".
            i.e. additional line separators and whitespace will be written, that do not
            influence the HTML code.
            Default: "true"
        </description>
    </context-param>
    <context-param>
        <param-name>org.apache.myfaces.AUTO_SCROLL</param-name>
        <param-value>true</param-value>
        <description>
            If true, a javascript function will be rendered that is able to restore the
            former vertical scroll on every request. Convenient feature if you have pages
            with long lists and you do not want the browser page to always jump to the top
            if you trigger a link or button action that stays on the same page.
            Default: "false"
        </description>
    </context-param>
    <context-param>
        <param-name>facelets.LIBRARIES</param-name>
        <param-value>/WEB-INF/tomahawk.taglib.xml</param-value>
    </context-param>
    <context-param>
	  <param-name>tiles-definitions</param-name>
	  <param-value>/WEB-INF/tiles.xml</param-value>
	</context-param>
    <context-param>
	  <param-name>wbemsmt-version</param-name>
	  <param-value>@PACKAGE_VERSION@</param-value>
	</context-param>
	<!-- Extensions Filter -->
    <filter>
        <filter-name>extensionsFilter</filter-name>
        <filter-class>org.apache.myfaces.webapp.filter.ExtensionsFilter</filter-class>
        <init-param>
            <param-name>uploadMaxFileSize</param-name>
            <param-value>100m</param-value>
            <description>Set the size limit for uploaded files.
                Format: 10 - 10 bytes
                        10k - 10 KB
                        10m - 10 MB
                        1g - 1 GB
            </description>
        </init-param>
        <init-param>
            <param-name>uploadThresholdSize</param-name>
            <param-value>100k</param-value>
            <description>Set the threshold size - files
                    below this limit are stored in memory, files above
                    this limit are stored on disk.

                Format: 10 - 10 bytes
                        10k - 10 KB
                        10m - 10 MB
                        1g - 1 GB
            </description>
        </init-param>
<!--        <init-param>
            <param-name>uploadRepositoryPath</param-name>
            <param-value>/temp</param-value>
            <description>Set the path where the intermediary files will be stored.
            </description>
        </init-param>-->
    </filter>
    <filter>
        <filter-name>authorizationFilter</filter-name>
        <filter-class>org.sblim.wbemsmt.webapp.jsf.embedded.AuthorizationFilter</filter-class>
        <!-- 
            For Standalone use: org.sblim.wbemsmt.webapp.jsf.AuthorizationFilter         
            For Embedded use: org.sblim.wbemsmt.webapp.jsf.embedded.AuthorizationFilter
         -->
        <init-param>
            <param-name>LoginView</param-name>
            <param-value>/embeddedNoSession.jsf</param-value>
            <!-- <param-value></param-value> -->
            <description>
            Sets the view id to which the AuthorizationFilter redirects unauthorized requests.
            This will be the only view accessible to unauthenticated users.
            
            For Standalone use: /login.jsf            
            For Embedded use: /embeddedNoSession.jsf
            </description>
        </init-param>
        <init-param>
            <param-name>LoginCheckClass</param-name>
            <param-value>org.sblim.wbemsmt.webapp.jsf.embedded.LoginCheckBean</param-value>
            <description>
            Defines the class of the bean doing the authorization.
            This class must implement the interface org.sblim.wbemsmt.tasklauncher.login.LoginCheck
            
            For Standalone use: org.sblim.wbemsmt.webapp.jsf.LoginCheckBean
            For Embedded use: org.sblim.wbemsmt.webapp.jsf.embedded.LoginCheckBean
            </description>
        </init-param>
        <init-param>
            <param-name>LoginCheckBean</param-name>
            <param-value>loginCheck</param-value>
            <description>
            Name of the session bean which type is defined in LoginCheckClass
            </description>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>authorizationFilter</filter-name>
        <url-pattern>*.jsf</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>authorizationFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    
    <!--    <filter-mapping>-->
<!--        <filter-name>javascriptDetector</filter-name>-->
<!--        <url-pattern>/_javascriptDetector_</url-pattern>-->
<!--    </filter-mapping>-->
    <filter-mapping>
        <filter-name>extensionsFilter</filter-name>
        <url-pattern>*.jsf</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>extensionsFilter</filter-name>
        <url-pattern>*.adminjsf</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>extensionsFilter</filter-name>
        <url-pattern>/faces/*</url-pattern>
    </filter-mapping>
	<filter-mapping>
	    <filter-name>extensionsFilter</filter-name>
	    <url-pattern>/faces/myFacesExtensionResource/*</url-pattern>
	</filter-mapping>    
    <!-- Listener, that does all the startup work (configuration, init). -->
    <listener>
        <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
    </listener>
	<listener>
		<listener-class>org.sblim.wbemsmt.webapp.jsf.SessionInvalidationListener</listener-class>
	</listener>
    <servlet>
    	<servlet-name>Faces Servlet</servlet-name>
    	<servlet-class>
    	javax.faces.webapp.FacesServlet</servlet-class>
    	<load-on-startup>1</load-on-startup>
    </servlet>
    <servlet>
    	<servlet-name>WbemsmtImageLoader</servlet-name>
    	<servlet-class>
    	org.sblim.wbemsmt.webapp.servlet.WbemsmtImageLoader</servlet-class>
    	<load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
    	<servlet-name>Faces Servlet</servlet-name>
    	<url-pattern>*.jsf</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>Faces Servlet</servlet-name>
    	<url-pattern>*.adminjsf</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
    	<servlet-name>WbemsmtImageLoader</servlet-name>
    	<url-pattern>/servlet/*</url-pattern>
    </servlet-mapping>
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>
    
    <!-- Faces Servlet -->
    <!-- Servlet mapping -->
    <!-- Welcome files -->
    <welcome-file-list>
        <welcome-file>index.html</welcome-file>
    </welcome-file-list>
    
  <security-constraint>
    <web-resource-collection>
      <web-resource-name> 
        TaskLauncher Admin Pages
      </web-resource-name>
      <!-- This would protect the entire site -->
      <url-pattern> /admin/* </url-pattern>
      <!-- If you list http methods, 
            only those methods are protected -->
      <http-method> DELETE </http-method>
      <http-method> GET </http-method>
      <http-method> POST </http-method>
      <http-method> PUT </http-method>
    </web-resource-collection>
    <auth-constraint>
      <!-- Roles that have access -->
      <role-name>tasklauncher-admin</role-name>
    </auth-constraint>
  </security-constraint>
  
  <!-- BASIC authentication -->
  <login-config>
    <auth-method> BASIC </auth-method>
    <realm-name> TaskLauncher Admin Pages </realm-name>
  </login-config>

  <!-- Define security roles -->
  <security-role>
    <description>TaskLauncher Administrators</description>
    <role-name>tasklauncher-admin</role-name>
  </security-role>    
</web-app>
